import React from "react";
import styled from "styled-components";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { Tooltip } from "reactstrap";
import {
  faUser,
  faUsers,
  faPlug,
  faBookReader,
  faThList,
  faCalendarAlt,
  faFileInvoiceDollar,
  faCrown,
  faSuitcase,
  faBook,
  faTag,
  faFileImage,
  faFilePdf,
  faFile,
  faStickyNote,
  faFileVideo,
  faFileWord,
  faFileAlt,
  faFilePowerpoint,
  faFileExcel,
  faFileCsv,
  faFileAudio,
  faCaretDown,
  faPlus,
  faTrash,
  faTimes,
  faArrowRight,
  faArrowLeft,
  faPen,
  faReply,
  faEllipsisV,
  faFilter,
  faSearch,
  faThumbtack,
  faCheck,
  faCheckSquare,
  faStream,
  faCog,
  faComment,
  faIcons,
  faEye,
  faBell,
  faLongArrowAltRight,
  faLongArrowAltLeft,
  faGripLinesVertical,
  faGripLines,
  faRobot,
  faSyncAlt,
  faUnlock,
  faLock,
  faEllipsisH,
  faCopy,
  faGhost,
  faFolderPlus,
  faFileUpload,
  faUpload,
  faWindowMinimize,
  faWindowRestore,
  faWindowMaximize,
  faUserPlus,
  faQuoteLeft,
  faLink,
  faLongArrowAltUp,
  faLongArrowAltDown,
  faBullhorn,
  faBan,
  faEnvelope,
  faProjectDiagram,
  faAt,
  faUserEdit,
  faHandshake,
  faUserShield,
  faKey,
  faSort,
  faBoxOpen,
  faQuestion,
  faSignOutAlt,
  faBold,
  faItalic,
  faUnderline,
  faCode,
  faHeading,
  faListOl,
  faListUl,
  faMapMarkerAlt,
  faChevronUp,
  faChevronDown,
  faList,
  faRunning,
  faHiking,
  faBaby,
  faUserTie,
  faFileSignature,
  faPaperPlane,
  faPaperclip,
  faGavel,
  faExclamationCircle,
  faExclamationTriangle,
  faBinoculars,
  faGlobe,
  faSeedling,
  faBolt,
  faAnchor,
  faAppleAlt,
  faWind,
  faBaseballBall,
  faBasketballBall,
  faFutbol,
  faFootballBall,
  faHockeyPuck,
  faPuzzlePiece,
  faSnowflake,
  faArchway,
  faAtom,
  faCloud,
  faUndoAlt,
  faRedoAlt,
  faRandom,
  faCircle,
  faUserLock,
  faClone,
  faBug,
  faTags,
  faFire,
  faTerminal,
  faBars,
  faHome,
  faClock,
  faArchive
} from "@fortawesome/free-solid-svg-icons";
import { faGithub } from "@fortawesome/free-brands-svg-icons";

const icons = {
  icons: faIcons,
  user: faUser,
  note: faStickyNote,
  quickFile: faFile,
  file: faFile,
  bot: faRobot,
  label: faTag,
  project: faBook,
  userSpace: faSuitcase,
  rootSpace: faCrown,
  image: faFileImage,
  video: faFileVideo,
  audio: faFileAudio,
  pdf: faFilePdf,
  word: faFileWord,
  powerpoint: faFilePowerpoint,
  excel: faFileExcel,
  csv: faFileCsv,
  text: faFileAlt,
  caret: faCaretDown,
  plus: faPlus,
  assignment: faProjectDiagram,
  delete: faTrash,
  close: faTimes,
  forward: faArrowRight,
  back: faArrowLeft,
  reply: faReply,
  moreV: faEllipsisV,
  moreH: faEllipsisH,
  filter: faFilter,
  search: faSearch,
  pin: faThumbtack,
  check: faCheck,
  checkBox: faCheckSquare,
  settings: faCog,
  comments: faComment,
  viewer: faEye,
  participant: faHandshake,
  editor: faPen,
  edit: faPen,
  administrator: faUserShield,
  owner: faKey,
  alert: faBell,
  up: faLongArrowAltUp,
  right: faLongArrowAltRight,
  down: faLongArrowAltDown,
  left: faLongArrowAltLeft,
  dragV: faGripLinesVertical,
  dragH: faGripLines,
  undo: faUndoAlt,
  redo: faRedoAlt,
  sync: faSyncAlt,
  open: faUnlock,
  closed: faLock,
  copy: faCopy,
  quote: faQuoteLeft,
  ghost: faGhost,
  createFolder: faFolderPlus,
  uploadFile: faFileUpload,
  uploadFolder: faUpload,
  minimize: faWindowMinimize,
  restore: faWindowRestore,
  maximize: faWindowMaximize,
  invite: faUserPlus,
  link: faLink,
  activity: faBullhorn,
  blocking: faBan,
  email: faEnvelope,
  mention: faAt,
  userEdit: faUserEdit,
  sort: faSort,
  space: faBoxOpen,
  help: faQuestion,
  logOut: faSignOutAlt,
  bold: faBold,
  italic: faItalic,
  underline: faUnderline,
  code: faCode,
  heading: faHeading,
  oList: faListOl,
  uList: faListUl,
  location: faMapMarkerAlt,
  chevronUp: faChevronUp,
  chevronDown: faChevronDown,
  urgent: faRunning,
  trivial: faHiking,
  new: faBaby,
  old: faUserTie,
  updated: faFileSignature,
  stale: faFile,
  send: faPaperPlane,
  attach: faPaperclip,
  rule: faGavel,
  error: faExclamationCircle,
  warning: faExclamationTriangle,
  overview: faBinoculars,
  random: faRandom,
  users: faUsers,
  plug: faPlug,
  bookReader: faBookReader,
  calender: faCalendarAlt,
  list: faThList,
  dollar: faFileInvoiceDollar,
  circle: faCircle,
  private: faUserLock,
  clone: faClone,
  labelset: faTags,
  chat: faAt,
  command: faTerminal,
  bar: faBars,
  home: faHome,
  github: faGithub,
  time: faClock,
  timeZone: faClock,
  "time zone": faClock,
  archive: faArchive,
  // Icon Picker
  globe: faGlobe,
  seedling: faSeedling,
  bolt: faBolt,
  anchor: faAnchor,
  apple: faAppleAlt,
  wind: faWind,
  baseball: faBaseballBall,
  basketball: faBasketballBall,
  futbol: faFutbol,
  football: faFootballBall,
  hockey: faHockeyPuck,
  puzzle: faPuzzlePiece,
  snow: faSnowflake,
  bug: faBug,
  arch: faArchway,
  atom: faAtom,
  cloud: faCloud,
  fire: faFire
};

const StyledIcon = styled(FontAwesomeIcon)`
  font-size: 1rem;
  color: ${props => props.$color} !important;
  cursor: pointer;
`;

/** Plain svg icon with optional color. */
const Icon = ({ name = "icons", fontSize, color = "grey", ...props }) => {
  const getColor = () => {
    if (typeof color === "object") {
      return `rgb(${color?.red}, ${color?.green}, ${color?.blue}, ${color?.alpha})`;
    } else {
      return color;
    }
  };

  return (
    <Tooltip placement="bottom" isOpen={false}>
      <StyledIcon
        {...props}
        icon={icons[name] || faIcons}
        fontSize={fontSize}
        $color={getColor}
        id={name}
      />
    </Tooltip>
  );
};

export default Icon;
